version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:10-browsers

aliases:
  - &restore_cache
    restore_cache:
      keys:
        - v2-dependencies-{{ checksum "package-lock.json" }}

jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
            - ~/.cache/Cypress
          key: v2-dependencies-{{ checksum "package-lock.json" }}
  test_unit:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm run test:ci
  lint:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm run lint
  test_visual:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: 'export APPLITOOLS_BATCH_ID=`echo $CIRCLE_SHA1`'
      - run:
          command: |
            if [[ -n $ENABLE_VISUAL_TEST ]]; then
              npm run test:visual
            else
              echo "Not running visual test"
            fi
  test_cypress:
    <<: *defaults
    steps:
      - checkout
      - *restore_cache
      - run: npm run build-storybook
      - run:
          command: npm run start-static-storybook
          background: true
      - run: ./node_modules/.bin/wait-on http://localhost:5000
      - run: npm run cypress
      - store_artifacts:
          path: ./cypress/screenshots/

workflows:
  version: 2
  build_and_test:
    jobs:
      - dependencies
      - test_cypress:
          requires:
            - dependencies
      - test_unit:
          requires:
            - dependencies
      - lint:
          requires:
            - dependencies
      - run_visual_test:
          type: approval
          requires:
            - dependencies
          filters:
            branches:
              only: /master/
      - test_visual:
          requires:
            - test_unit
            - lint
            - test_cypress
            - run_visual_test
          filters:
            branches:
              only: /master/
